[{"D:\\Dev\\Devinhouse\\sap-softplan\\src\\index.js":"1","D:\\Dev\\Devinhouse\\sap-softplan\\src\\reportWebVitals.js":"2","D:\\Dev\\Devinhouse\\sap-softplan\\src\\pages\\home.jsx":"3","D:\\Dev\\Devinhouse\\sap-softplan\\src\\components\\searchbar.jsx":"4","D:\\Dev\\Devinhouse\\sap-softplan\\src\\pages\\processos.jsx":"5","D:\\Dev\\Devinhouse\\sap-softplan\\src\\containers\\formwindow.jsx":"6","D:\\Dev\\Devinhouse\\sap-softplan\\src\\components\\processdetails.jsx":"7","D:\\Dev\\Devinhouse\\sap-softplan\\src\\routes\\index.js":"8","D:\\Dev\\Devinhouse\\sap-softplan\\src\\components\\processcard.jsx":"9","D:\\Dev\\Devinhouse\\sap-softplan\\src\\services\\process.js":"10","D:\\Dev\\Devinhouse\\sap-softplan\\src\\constants\\constants.js":"11"},{"size":773,"mtime":1611339897494,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1843,"mtime":1611355802988,"results":"15","hashOfConfig":"13"},{"size":1758,"mtime":1611359055736,"results":"16","hashOfConfig":"13"},{"size":4249,"mtime":1611358533324,"results":"17","hashOfConfig":"13"},{"size":7894,"mtime":1611359617444,"results":"18","hashOfConfig":"13"},{"size":4381,"mtime":1611359597642,"results":"19","hashOfConfig":"13"},{"size":415,"mtime":1611339981029,"results":"20","hashOfConfig":"13"},{"size":2441,"mtime":1611359594457,"results":"21","hashOfConfig":"13"},{"size":993,"mtime":1611336834395,"results":"22","hashOfConfig":"13"},{"size":61,"mtime":1611320905640,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1a2trfc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"D:\\Dev\\Devinhouse\\sap-softplan\\src\\index.js",[],["51","52"],"D:\\Dev\\Devinhouse\\sap-softplan\\src\\reportWebVitals.js",[],"D:\\Dev\\Devinhouse\\sap-softplan\\src\\pages\\home.jsx",["53"],"import { useState } from \"react\";\r\nimport SearchBar from \"../components/searchbar\";\r\nimport \"../pages/home.css\";\r\nimport FormWindow from \"../containers/formwindow\"\r\nimport Button from '@material-ui/core/Button';\r\nimport { useEffect } from \"react\"\r\nimport ProcessAPI from \"../services/process\";\r\n\r\n\r\nexport default function Home() {\r\n    const [processes, setProcesses] = useState([])\r\n    const [process, setProcess] = useState({})\r\n    const [openModal, setOpenModal] = useState(false)\r\n    const [interested, setInterested] = useState([])\r\n    const searchValue = \"\"\r\n\r\n    useEffect(() => {\r\n        loadProcess()\r\n    }, [])\r\n\r\n    const loadProcess = async () => {\r\n        const processData = await ProcessAPI.searchProcess()\r\n        console.log(processData)\r\n        setProcesses(processData)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-home\">\r\n                <div className=\"content-home\">\r\n                    <div className=\"title\">Busca de processos</div>\r\n                    <SearchBar \r\n                    type=\"search\" \r\n                    placeholder=\"Pesquise por uma informação do processo\"\r\n                    setProcesses={setProcesses}\r\n                    searchValue={searchValue}\r\n                    >\r\n                    </SearchBar>    \r\n                    <FormWindow \r\n                    isHome={true} \r\n                    processes={processes}\r\n                    setProcesses={setProcesses}\r\n                    process={process} \r\n                    interested={interested}\r\n                    setInterested={setInterested}\r\n                    setProcess={setProcess} \r\n                    setOpenModal={setOpenModal} \r\n                    openModal={openModal}\r\n                    ></FormWindow>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}","D:\\Dev\\Devinhouse\\sap-softplan\\src\\components\\searchbar.jsx",[],"D:\\Dev\\Devinhouse\\sap-softplan\\src\\pages\\processos.jsx",["54","55"],"import { useState } from \"react\";\r\nimport SearchBar from \"../components/searchbar\";\r\nimport Card from \"../components/processcard\";\r\nimport \"../pages/processos.css\";\r\nimport FormWindow from \"../containers/formwindow\";\r\nimport { Box } from '@material-ui/core';\r\nimport ProcessDetails from \"../components/processdetails\";\r\nimport { useEffect } from \"react\"\r\nimport ProcessAPI from \"../services/process\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default function Processos() {\r\n    const [processes, setProcesses] = useState([])   \r\n    const [interested, setInterested] = useState([])\r\n    const [openDetails, setOpenDetails] = useState(\"none\")\r\n    const [openModal, setOpenModal] = useState(false)\r\n    const [process, setProcess] = useState({})\r\n    const [viewProcess, setViewProcess] = useState({})\r\n    const { searchValue } = useParams();\r\n\r\n   useEffect(() => {\r\n       if(searchValue) {\r\n        loadProcess(searchValue)\r\n       } else {\r\n        loadProcess()\r\n       }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(!searchValue) {\r\n        loadProcess()\r\n        }\r\n    }, [process])\r\n\r\n    const loadProcess = async (searchText) => {\r\n        const processData = await ProcessAPI.searchProcess(searchText)\r\n        setProcesses(processData)\r\n    } \r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container flex\">\r\n                <div className=\"page-title\">\r\n                    Busca de Processos\r\n                </div>\r\n\r\n                <div className=\"page-content\">\r\n                    <div className=\"flex search-container\">\r\n                        <SearchBar type=\"search\"\r\n                         setProcesses={setProcesses}\r\n                         searchValue={searchValue}\r\n                         >\r\n                        </SearchBar>\r\n                        <FormWindow\r\n                            isHome={false}\r\n                            processes={processes}\r\n                            setProcesses={setProcesses}\r\n                            openModal={openModal}\r\n                            setOpenModal={setOpenModal}\r\n                            process={process}\r\n                            setProcess={setProcess}\r\n                            setViewProcess={setViewProcess}\r\n                            interested={interested}\r\n                            setInterested={setInterested}\r\n                        >\r\n                        </FormWindow>\r\n\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                        <div className=\"card-list\">\r\n                             {processes.length > 0 ? processes.map(item => (\r\n                                <Box key={item.id} mt={3}>\r\n                                    <Card\r\n                                        setViewProcess={setViewProcess}\r\n                                        viewProcess={item}\r\n                                        openDetails={openDetails}\r\n                                        setOpenDetails={setOpenDetails}\r\n                                    >\r\n                                    </Card>\r\n                                </Box>\r\n                            ))\r\n                        : <Box pt={4}> Nenhum processo encontrado </Box>\r\n                        }\r\n                        </div>\r\n                        <div className=\"details-content\" style={{ display: openDetails }}>\r\n                            <ProcessDetails\r\n                                viewProcess={viewProcess}\r\n                                setViewProcess={setViewProcess}\r\n                                setProcess={setProcess}\r\n                                processes={processes}\r\n                                setProcesses={setProcesses}\r\n                                openDetails={openDetails}\r\n                                setOpenDetails={setOpenDetails}\r\n                                openModal={openModal}\r\n                                setOpenModal={setOpenModal}\r\n                                setInterested={setInterested}\r\n                            >\r\n                            </ProcessDetails>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}","D:\\Dev\\Devinhouse\\sap-softplan\\src\\containers\\formwindow.jsx",["56"],"import { useHistory } from 'react-router-dom';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, Dialog, DialogTitle, DialogContent, DialogActions, Button, Box, TextField, Grid, Typography } from '@material-ui/core';\r\nimport ProcessAPI from \"../services/process\";\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nexport default function FormWindow(props) {\r\n    const { isHome,\r\n        processes,\r\n        setProcesses,\r\n        openModal,\r\n        setOpenModal,\r\n        process,\r\n        setProcess,\r\n        setViewProcess,\r\n        interested,\r\n        setInterested,\r\n    } = props;\r\n\r\n    const [interest, setInterest] = useState({})\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        setProcess({ ...process, interessados: interested })\r\n    }, [interested]);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpenModal(true);\r\n        setProcess({ assunto: \"\", descricao: \"\", data: moment().format('YYYY-MM-DD'), numero: \"SOFT 0001/2018\" })\r\n        setInterested([{ id: 0, nome: \"\" }])\r\n\r\n    };\r\n    const handleClose = () => {\r\n        setOpenModal(false);\r\n    };\r\n\r\n    const handleChangeInterest = (event) => {\r\n        const { value, name } = event.target\r\n        //console.log(name, value)\r\n        setInterest({ ...interest, [name]: value })\r\n    };\r\n\r\n    const handleAddToInterested = () => {\r\n        //console.log(interest)\r\n        setInterested([\r\n            ...interested,\r\n            {\r\n                id: Math.random().toString(36).substr(2, 9),\r\n                ...interest,\r\n            }\r\n        ])\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const { value, name } = event.target\r\n        //console.log(name, value)   \r\n        setProcess({ ...process, [name]: value })\r\n    };\r\n\r\n    const handleSubmitProcess = (event) => {\r\n\r\n        const existProcess = processes.some(item => item.id === process.id)\r\n\r\n        if (existProcess) {\r\n            const result = processes.map(item => {\r\n                if (item.id === process.id) {\r\n                    return process\r\n                }\r\n                else {\r\n                    return item\r\n                }\r\n            })\r\n            setProcesses(result)\r\n            setViewProcess({\r\n                id: process.id,\r\n                numero: process.numero,\r\n                assunto: process.assunto,\r\n                data: process.data,\r\n                interessados: interested,\r\n                descricao: process.descricao\r\n            })\r\n            ProcessAPI.updateProcess(process, process.id)\r\n        } else {\r\n            setProcesses([\r\n                ...processes,\r\n                {\r\n                    id: Math.random().toString(36).substr(2, 9),\r\n                    interessados: interested,\r\n                    ...process,\r\n                }\r\n            ])\r\n            ProcessAPI.insertProcess(process)\r\n            setProcess({ id: 0, assunto: \"\", data: \"\", interessados: [], descricao: \"\" });\r\n            setInterested([])\r\n        }\r\n        //console.log(processes)\r\n        setOpenModal(false)\r\n        history.push(\"/processos\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isHome ? <p className=\"subtitle\">Voce pode criar um novo processo <Link href=\"#\" onClick={handleClickOpen}> clicando aqui </Link></p>\r\n                : <Box ml={1}>\r\n                    <Button\r\n                        onClick={handleClickOpen}\r\n                        variant=\"contained\"\r\n                        style={{ fontSize: '14px' }}\r\n                    >Novo\r\n                    </Button>\r\n                </Box>\r\n            }\r\n            <Box component=\"form\" >\r\n                <Dialog fullWidth open={openModal} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n\r\n                    <DialogTitle id=\"form-dialog-title\">Cadastro de Processo</DialogTitle>\r\n                    <DialogContent>\r\n                        <Grid container spacing={2} direction=\"column\">\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"assunto\"\r\n                                    label=\"Assunto\"\r\n                                    margin=\"dense\"\r\n                                    variant=\"standard\"\r\n                                    fullWidth\r\n                                    name=\"assunto\"\r\n                                    value={process.assunto}\r\n                                    onChange={handleChange}\r\n                                    style={{ fontSize: '14px' }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography style={{ fontSize: '14px', color: \"#757575\" }}>Interessados</Typography>\r\n                                {interested.map(item => (\r\n                                    <Typography key={item.id}>\r\n                                        {item.nome}\r\n                                    </Typography>\r\n                                ))}\r\n                            </Grid>\r\n                            <Grid container item alignItems=\"flex-end\">\r\n                                <Grid item xs={8}>\r\n                                    <TextField\r\n                                        id=\"name\"\r\n                                        label=\"Novo Interessado\"\r\n                                        margin=\"dense\"\r\n                                        variant=\"standard\"\r\n                                        fullWidth\r\n                                        name=\"nome\"\r\n                                        onChange={handleChangeInterest}\r\n                                        style={{ fontSize: '14px' }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Box ml={1}>\r\n                                        <Button\r\n                                            onClick={handleAddToInterested}\r\n                                            variant=\"contained\">Adicionar\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    id=\"descricao\"\r\n                                    label=\"Descrição\"\r\n                                    margin=\"dense\"\r\n                                    variant=\"standard\"\r\n                                    fullWidth\r\n                                    name=\"descricao\"\r\n                                    value={process.descricao}\r\n                                    onChange={handleChange}\r\n                                    style={{ fontSize: '14px' }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            style={{ fontSize: '14px' }}\r\n                            onClick={handleClose}\r\n                        >\r\n                            Cancelar\r\n                        </Button>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{ fontSize: '14px' }}\r\n                            onClick={handleSubmitProcess}\r\n                        >\r\n                            Salvar\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n            </Box>\r\n\r\n        </>\r\n    )\r\n}\r\n","D:\\Dev\\Devinhouse\\sap-softplan\\src\\components\\processdetails.jsx",[],"D:\\Dev\\Devinhouse\\sap-softplan\\src\\routes\\index.js",[],"D:\\Dev\\Devinhouse\\sap-softplan\\src\\components\\processcard.jsx",[],"D:\\Dev\\Devinhouse\\sap-softplan\\src\\services\\process.js",[],"D:\\Dev\\Devinhouse\\sap-softplan\\src\\constants\\constants.js",[],["57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":5,"column":8,"nodeType":"65","messageId":"66","endLine":5,"endColumn":14},{"ruleId":"67","severity":1,"message":"68","line":29,"column":8,"nodeType":"69","endLine":29,"endColumn":10,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"68","line":35,"column":8,"nodeType":"69","endLine":35,"endColumn":17,"suggestions":"71"},{"ruleId":"67","severity":1,"message":"72","line":27,"column":8,"nodeType":"69","endLine":27,"endColumn":20,"suggestions":"73"},{"ruleId":"59","replacedBy":"74"},{"ruleId":"61","replacedBy":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchValue'. Either include it or remove the dependency array.","ArrayExpression",["78"],["79"],"React Hook useEffect has missing dependencies: 'process' and 'setProcess'. Either include them or remove the dependency array.",["80"],["76"],["77"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},"Update the dependencies array to be: [searchValue]",{"range":"87","text":"88"},"Update the dependencies array to be: [process, searchValue]",{"range":"89","text":"90"},"Update the dependencies array to be: [interested, process, setProcess]",{"range":"91","text":"92"},[1005,1007],"[searchValue]",[1104,1113],"[process, searchValue]",[771,783],"[interested, process, setProcess]"]