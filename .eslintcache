[{"D:\\Dev\\Devinhouse\\sap-softplan\\src\\index.js":"1","D:\\Dev\\Devinhouse\\sap-softplan\\src\\reportWebVitals.js":"2","D:\\Dev\\Devinhouse\\sap-softplan\\src\\pages\\home.jsx":"3","D:\\Dev\\Devinhouse\\sap-softplan\\src\\components\\searchbar.jsx":"4","D:\\Dev\\Devinhouse\\sap-softplan\\src\\pages\\processos.jsx":"5","D:\\Dev\\Devinhouse\\sap-softplan\\src\\containers\\formwindow.jsx":"6","D:\\Dev\\Devinhouse\\sap-softplan\\src\\components\\processdetails.jsx":"7","D:\\Dev\\Devinhouse\\sap-softplan\\src\\routes\\index.js":"8","D:\\Dev\\Devinhouse\\sap-softplan\\src\\components\\processcard.jsx":"9","D:\\Dev\\Devinhouse\\sap-softplan\\src\\services\\process.js":"10","D:\\Dev\\Devinhouse\\sap-softplan\\src\\constants\\constants.js":"11","D:\\Dev\\Devinhouse\\sap-softplan\\src\\components\\message.jsx":"12"},{"size":1102,"mtime":1611425185120,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1892,"mtime":1611425961226,"results":"16","hashOfConfig":"14"},{"size":1757,"mtime":1611427169286,"results":"17","hashOfConfig":"14"},{"size":5283,"mtime":1611435834446,"results":"18","hashOfConfig":"14"},{"size":7924,"mtime":1611427592746,"results":"19","hashOfConfig":"14"},{"size":4731,"mtime":1611435692914,"results":"20","hashOfConfig":"14"},{"size":415,"mtime":1611339981029,"results":"21","hashOfConfig":"14"},{"size":2433,"mtime":1611435338456,"results":"22","hashOfConfig":"14"},{"size":993,"mtime":1611336834395,"results":"23","hashOfConfig":"14"},{"size":61,"mtime":1611320905640,"results":"24","hashOfConfig":"14"},{"size":582,"mtime":1611434948158,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1a2trfc",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\Dev\\Devinhouse\\sap-softplan\\src\\index.js",[],["53","54"],"D:\\Dev\\Devinhouse\\sap-softplan\\src\\reportWebVitals.js",[],"D:\\Dev\\Devinhouse\\sap-softplan\\src\\pages\\home.jsx",[],"D:\\Dev\\Devinhouse\\sap-softplan\\src\\components\\searchbar.jsx",[],"D:\\Dev\\Devinhouse\\sap-softplan\\src\\pages\\processos.jsx",["55","56"],"D:\\Dev\\Devinhouse\\sap-softplan\\src\\containers\\formwindow.jsx",["57"],"import { useHistory } from 'react-router-dom';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, Dialog, DialogTitle, DialogContent, DialogActions, Button, Box, TextField, Grid, Typography } from '@material-ui/core';\r\nimport ProcessAPI from \"../services/process\";\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nexport default function FormWindow(props) {\r\n    const { isHome,\r\n        processes,\r\n        setProcesses,\r\n        openModal,\r\n        setOpenModal,\r\n        process,\r\n        setProcess,\r\n        setViewProcess,\r\n        interested,\r\n        setInterested,\r\n    } = props;\r\n\r\n    const [interest, setInterest] = useState({})\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        setProcess({ ...process, interessados: interested })\r\n    }, [interested]);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpenModal(true);\r\n        setProcess({ assunto: \"\", descricao: \"\", data: moment().format('YYYY-MM-DD'), numero: \"SOFT 0001/2018\" })\r\n        setInterested([{ id: 0, nome: \"\" }])\r\n\r\n    };\r\n    const handleClose = () => {\r\n        setOpenModal(false);\r\n    };\r\n\r\n    const handleChangeInterest = (event) => {\r\n        const { value, name } = event.target\r\n        //console.log(name, value)\r\n        setInterest({ ...interest, [name]: value })\r\n    };\r\n\r\n    const handleAddToInterested = () => {\r\n        //console.log(interest)\r\n        setInterested([\r\n            ...interested,\r\n            {\r\n                id: Math.random().toString(36).substr(2, 9),\r\n                ...interest,\r\n            }\r\n        ])\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const { value, name } = event.target\r\n        //console.log(name, value)   \r\n        setProcess({ ...process, [name]: value })\r\n    };\r\n\r\n    const handleSubmitProcess = (event) => {\r\n\r\n        const existProcess = processes.some(item => item.id === process.id)\r\n\r\n        if (existProcess) {\r\n            const result = processes.map(item => {\r\n                if (item.id === process.id) {\r\n                    return process\r\n                }\r\n                else {\r\n                    return item\r\n                }\r\n            })\r\n            setProcesses(result)\r\n            setViewProcess({\r\n                id: process.id,\r\n                numero: process.numero,\r\n                assunto: process.assunto,\r\n                data: process.data,\r\n                interessados: interested,\r\n                descricao: process.descricao\r\n            })\r\n            ProcessAPI.updateProcess(process, process.id)\r\n        } else {\r\n            setProcesses([\r\n                ...processes,\r\n                {\r\n                    id: Math.random().toString(36).substr(2, 9),\r\n                    interessados: interested,\r\n                    ...process,\r\n                }\r\n            ])\r\n            ProcessAPI.insertProcess(process)\r\n            setProcess({ id: 0, assunto: \"\", data: \"\", interessados: [], descricao: \"\" });\r\n            setInterested([])\r\n        }\r\n        //console.log(processes)\r\n        setOpenModal(false)\r\n        history.push(\"/processos\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isHome ? <Box mt={2}> <Typography variant=\"h6\"> Voce pode criar um novo processo <Link href=\"#\" onClick={handleClickOpen}> clicando aqui </Link></Typography></Box>\r\n                : <Box ml={2}>\r\n                    <Button\r\n                        onClick={handleClickOpen}\r\n                        variant=\"contained\"\r\n                        style={{ fontSize: '14px' }}\r\n                    >Novo\r\n                    </Button>\r\n                </Box>\r\n            }\r\n            <Box component=\"form\" >\r\n                <Dialog fullWidth open={openModal} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n\r\n                    <DialogTitle id=\"form-dialog-title\">Cadastro de Processo</DialogTitle>\r\n                    <DialogContent>\r\n                        <Grid container spacing={2} direction=\"column\">\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"assunto\"\r\n                                    label=\"Assunto\"\r\n                                    margin=\"dense\"\r\n                                    variant=\"standard\"\r\n                                    fullWidth\r\n                                    name=\"assunto\"\r\n                                    value={process.assunto}\r\n                                    onChange={handleChange}\r\n                                    style={{ fontSize: '14px' }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography style={{ fontSize: '14px', color: \"#757575\" }}>Interessados</Typography>\r\n                                {interested.map(item => (\r\n                                    <Typography key={item.id}>\r\n                                        {item.nome}\r\n                                    </Typography>\r\n                                ))}\r\n                            </Grid>\r\n                            <Grid container item alignItems=\"flex-end\">\r\n                                <Grid item xs={8}>\r\n                                    <TextField\r\n                                        id=\"name\"\r\n                                        label=\"Novo Interessado\"\r\n                                        margin=\"dense\"\r\n                                        variant=\"standard\"\r\n                                        fullWidth\r\n                                        name=\"nome\"\r\n                                        onChange={handleChangeInterest}\r\n                                        style={{ fontSize: '14px' }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Box ml={1}>\r\n                                        <Button\r\n                                            onClick={handleAddToInterested}\r\n                                            variant=\"contained\">Adicionar\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    id=\"descricao\"\r\n                                    label=\"Descrição\"\r\n                                    margin=\"dense\"\r\n                                    variant=\"standard\"\r\n                                    fullWidth\r\n                                    name=\"descricao\"\r\n                                    value={process.descricao}\r\n                                    onChange={handleChange}\r\n                                    style={{ fontSize: '14px' }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            style={{ fontSize: '14px' }}\r\n                            onClick={handleClose}\r\n                        >\r\n                            Cancelar\r\n                        </Button>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{ fontSize: '14px' }}\r\n                            onClick={handleSubmitProcess}\r\n                        >\r\n                            Salvar\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n            </Box>\r\n\r\n        </>\r\n    )\r\n}\r\n","D:\\Dev\\Devinhouse\\sap-softplan\\src\\components\\processdetails.jsx",["58","59","60"],"D:\\Dev\\Devinhouse\\sap-softplan\\src\\routes\\index.js",[],"D:\\Dev\\Devinhouse\\sap-softplan\\src\\components\\processcard.jsx",["61"],"\r\nimport { Typography, Grid, Card, CardActionArea, CardContent } from \"@material-ui/core\";\r\n\r\n\r\nexport default function ProcessCard(props) {\r\n    const { viewProcess, setViewProcess, setOpenDetails } = props\r\n\r\n    const handleViewProcess = (obj) => {\r\n        setViewProcess(obj)\r\n        setOpenDetails(\"block\")\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card >\r\n                <CardActionArea href=\"#\" onClick={() => handleViewProcess(viewProcess)}>\r\n                    <CardContent>\r\n                        <Grid container spacing={2} >\r\n                            <Grid item xs={3} sm={2} md={2} lg={1}><img style={{ width:\"100%\" }} src=\"img/placeholder.png\" /></Grid>\r\n                            <Grid item xs={12} sm={12} md={12} lg={3}>\r\n                                <Typography variant=\"subtitle1\" style={{ fontSize: '14px', fontWeight: \"bold\" }}>Número</Typography>\r\n                                <Typography variant=\"body1\" style={{ fontSize: '16px' }}>{viewProcess.numero}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={12} lg={3}>\r\n                                <Typography variant=\"subtitle1\" style={{ fontSize: '14px', fontWeight: \"bold\" }}>Assunto</Typography>\r\n                                <Typography variant=\"body1\" style={{ fontSize: '16px' }}>{viewProcess.assunto}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={12} lg={3}>\r\n                                <Typography variant=\"subtitle1\" style={{ fontSize: '14px', fontWeight: \"bold\" }}>Interessado</Typography>\r\n                                {viewProcess.interessados.map(interessado => (\r\n                                    <Typography variant=\"body1\" style={{ fontSize: '16px' }} key={interessado.id}>{interessado.nome}</Typography>\r\n                                ))}</Grid>\r\n                            <Grid item xs={12} sm={12} md={12} lg={2}>\r\n                                <Typography  variant=\"subtitle1\" style={{ fontSize: '14px', fontWeight: \"bold\" }}>Descrição</Typography>\r\n                                <Typography variant=\"body1\" style={{ fontSize: '16px' }} >{viewProcess.descricao}</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\n","D:\\Dev\\Devinhouse\\sap-softplan\\src\\services\\process.js",[],"D:\\Dev\\Devinhouse\\sap-softplan\\src\\constants\\constants.js",[],"D:\\Dev\\Devinhouse\\sap-softplan\\src\\components\\message.jsx",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":31,"column":8,"nodeType":"68","endLine":31,"endColumn":10,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"67","line":37,"column":8,"nodeType":"68","endLine":37,"endColumn":17,"suggestions":"70"},{"ruleId":"66","severity":1,"message":"71","line":27,"column":8,"nodeType":"68","endLine":27,"endColumn":20,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":14,"column":9,"nodeType":"75","messageId":"76","endLine":14,"endColumn":20},{"ruleId":"73","severity":1,"message":"77","line":16,"column":9,"nodeType":"75","messageId":"76","endLine":16,"endColumn":20},{"ruleId":"78","severity":1,"message":"79","line":48,"column":67,"nodeType":"80","endLine":48,"endColumn":133},{"ruleId":"78","severity":1,"message":"79","line":20,"column":68,"nodeType":"80","endLine":20,"endColumn":126},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchValue'. Either include it or remove the dependency array.","ArrayExpression",["83"],["84"],"React Hook useEffect has missing dependencies: 'process' and 'setProcess'. Either include them or remove the dependency array.",["85"],"no-unused-vars","'openMessage' is assigned a value but never used.","Identifier","unusedVar","'messageText' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},"Update the dependencies array to be: [searchValue]",{"range":"92","text":"93"},"Update the dependencies array to be: [process, searchValue]",{"range":"94","text":"95"},"Update the dependencies array to be: [interested, process, setProcess]",{"range":"96","text":"97"},[1226,1228],"[searchValue]",[1330,1339],"[process, searchValue]",[771,783],"[interested, process, setProcess]"]